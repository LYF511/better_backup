better_backup:
  metadata_conflict: 当前版本不兼容旧版元数据。请在旧版做好备份后重置备份数据。
  help_title: 查看 Better Backup 用法
  help_message: |
    ------ {1} v{2} ------
    一个支持文件去重的高效备份/回档插件
    §d【格式说明】§r
    §7{0}§r 显示帮助信息
    §7{0} make §e[<message>]§r 创建一个§a备份§r。§e<message>§r 为可选注释
    §7{0} restore §6[<uuid|index>]§r §c回档§r为备份点 §6<uuid|index>§r 的存档
    §7{0} remove §6[<uuid|index>]§r §c删除§r备份点 §6<uuid|index>§r 的存档
    §7{0} confirm§r 再次确认是否进行§c回档§r
    §7{0} abort§r 在任何时候键入此指令可中断§c回档§r
    §7{0} list§r 显示各备份点的存档信息以选择 §6[<uuid|index>]§r 备份点
    §7{0} reload§r 重新加载配置文件
    §7{0} reset§r 重置备份数据
    §7{0} export §6[<uuid|index>]§r §6[<format>]§r §6[<compress_level>]§r 导出备份数据
    §7{0} lock §6[<uuid|index>]§r 锁定或解锁备份点
    当 §6<uuid|index>§r 未设置或为 §c1§r 时为最新备份点
    如 §c2§r 为由新到旧的第二个备份点，不考虑 §cpage§r，请自行计算
    §7{0} timer§r 显示定时器状态
    §7{0} timer enable§r 启动备份定时器
    §7{0} timer disable§r 关闭备份定时器
    §7{0} timer set_interval §6<minutes>§r 设置备份定时器时间间隔，单位分钟
    §7{0} timer reset§r 重置备份定时器

  second: "{0}秒"
  minute: "{0}分钟"
  hour: "{0}小时"
  day: "{0}天"
  empty_comment: §7空§r
  no_one_backup: 没有备份
  unknown_backup: 未找到相应备份点

  lock.warning: 正在{0}中，请等待操作执行完成
  operations:
    remove: §a删除备份点§r
    create: §a备份§r
    restore: §c回档§r
    confirm: 准备§c回档§r
    lock: 锁定
    reset: §c重置r
    export: §a导出§r

  remove_backup:
    start: 正在删除
    success: 删除备份点 §6{0}§r§a 完成§r
    fail: "删除备份点 §6{0}§r §4失败§r: {1}"

  create_backup:
    start: §a备份§r中...请稍等
    abort.plugin_unload: 插件重载，§a备份§r中断！
    abort.no_slot: 未找到可用备份点，§a备份§r中断！
    success: §a备份§r §6{0}§r 完成，耗时 §6{1}§r 秒 {2}
    fail: "§a备份§r失败: {0}"
    # zstd_not_found: '请安装 pyzstd 或关闭备份压缩功能：§6{0} -m pip install pyzstd§r'
  
  auto_remove:
    removed: 已自动删除备份点 §e{0}§r
    no_one_removed: 没有备份被自动删除

  restore_backup:
    echo_action: 准备将存档恢复至备份点 §6{0}§r
    confirm_hint: 使用 §7{0} confirm§r 确认§c回档§r
    confirm_hover: 点击确认
    abort_hint: §7{0} abort§r 取消
    abort_hover: 点击取消
    success: §c回档§r成功
    fail: §a回档§r失败：{0}
    # zstd_not_found: 'pip install pyzstd 以回档已压缩的备份'
  
  lock_backup:
    locked: 已§c锁定§r备份 §6{0}§r
    unlocked: 已§a解锁§r备份 §6{0}§r

  reset_backup:
    start: 准备重置备份数据
    success: §c重置§r成功

  export_backup:
    start: 正在导出备份数据
    success: §a导出§r成功，位于 {0}
    # zstd_not_found: 'pip install pyzstd 或使用其他导出格式'

  confirm_restore.nothing_to_confirm: 没有什么需要确认的

  do_restore:
    countdown.intro: 10秒后关闭服务器§c回档§r
    countdown.text: 还有 {0} 秒，将§c回档§r为备份点 §6{1}§r
    countdown.hover: 点击终止回档！
    abort: §c回档§r被中断！

  trigger_abort.abort: 终止操作！

  list_backup:
    title: §d[备份点信息]§r
    restore_hint: 回档至 {0}
    remove_hint: 删除备份 {0}
    lock_hint: 锁定备份 {0}
    unlock_hint: 解锁备份 {0}
    page:
      page_not_found: 不存在这一页
      total_info: 共 {0} 个备份点，占用空间 §a{1}§r
      previous_page: 上一页
      next_page: 下一页

  print_help:
    hotbar: §d【快捷操作】§r
    click_to_create:
      text: ">>> §a点我创建一个备份§r <<<"
      hover: 记得修改注释
      command: "{0} make 我是一个注释"
    click_to_restore:
      text: ">>> §c点我回档至最近的备份§r <<<"
      hover: 也就是回档至第一个备份点
      command: "{0} restore"

  unknown_command:
    text: 参数错误！请输入 §7{0}§r 以获取插件信息
    hover: 点击查看帮助
  command:
    permission_denied: §c权限不足§r

  timer:
    set_interval: "定时器触发间隔已设置为 §6{0}§r 分钟"
    reset_timer: 定时器已重置
    get_next_backup_message: "下次自动备份时间: §3{0}§r"
    on_backup_created: 检测到新增的备份，重置定时器
    on_backup_succeed: 定时备份成功
    on_backup_failed: 定时备份失败，可能发生了某些错误

    set_enabled:
      timer: "定时器已{0}"
      start: 启动
      stop: 关闭

    run:
      trigger_time: "每 §6{0}§r 分钟一次的定时备份触发"
      timed_backup: "{0} 定时备份"

    status:
      config_enabled: '插件启用: {0}'
      clock_enabled: '时钟启用: {0}'
      clock_interval: '时钟间隔: {0}min'
      has_online_player: '存在在线玩家: {0}'
